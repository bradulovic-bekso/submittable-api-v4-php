<?php
/**
 * OrganizationFeaturesTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Submittable API Documentation
 *
 * This page contains the documentation on how to use Submittable through API calls.  ### Breaking changes   * All v3/requests and v3/responses endpoints merged into v4/entries endpoints     * Entries are a combination of both the request and response from v3 * All endpoints returning a page now use a continuation token instead of page number and page size     * Endpoints no longer return a count of how many items there are     * Endpoints no longer return how many pages there are     * Filters and size are made on the first request only, subsequent requests can only use the continuation token returned on the response. * Get a submission now returns formEntries instead of formResponses     * formEntries does not contain the fieldData property         * To get a single entry use the \"Get an entry\" endpoint, /v4/entries/{entryId}         * To get all entries for a submission use the \"Get a submission’s entries\" endpoint, /v4/entries/submissions/{submissionId} * All submissionId properties are now guids instead of integers * All labelId properties are now guids instead of integers * LegacyProjects.Include and LegacyProjects.Exclude on /v3/submissions have been removed * Update project endpoint /v3/projects/{projectId} now updates everything for a project * v3/projects/stages endpoints are removed, now review stages are managed by the create and update project endpoints * Get a list of team members and their assignment counts /v3/organizations/team/assignments has been replaced by /v4/organizations/team to get team members and /v4/submissions/team/assignment to get their assignment counts   ### Authentication  To access the API, you must present an API Key provisioned for your organization.  The API Key is sent using a basic authentication header, with the API key as the username and a blank password. Please ensure that the value is formatted as `{apiKey}`.  ``` Authorization: Basic {apiKey} ```  ### Request Content Type  All endpoints, unless otherwise noted, accept and produce `application/json`. Please ensure the `Content-Type` header for POST and PUT requests are set correctly.
 *
 * The version of the OpenAPI document: v4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * OrganizationFeaturesTest Class Doc Comment
 *
 * @category    Class
 * @description OrganizationFeatures
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class OrganizationFeaturesTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "OrganizationFeatures"
     */
    public function testOrganizationFeatures()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legacy_organization_id"
     */
    public function testPropertyLegacyOrganizationId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_eligibility_forms"
     */
    public function testPropertyEnableEligibilityForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_additional_forms"
     */
    public function testPropertyEnableAdditionalForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_reference_forms"
     */
    public function testPropertyEnableReferenceForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_internal_forms"
     */
    public function testPropertyEnableNewInternalForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_reviews"
     */
    public function testPropertyAllowReviews()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_form_tables"
     */
    public function testPropertyEnableFormTables()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_large_select"
     */
    public function testPropertyEnableLargeSelect()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "num_form_fields"
     */
    public function testPropertyNumFormFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "require_address"
     */
    public function testPropertyRequireAddress()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_address_validation"
     */
    public function testPropertyEnableAddressValidation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_short_answer_extended_validation"
     */
    public function testPropertyEnableShortAnswerExtendedValidation()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_form_logic"
     */
    public function testPropertyEnableFormLogic()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_charity_check"
     */
    public function testPropertyEnableCharityCheck()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_collaborative_drafts"
     */
    public function testPropertyEnableCollaborativeDrafts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_docusign_integration"
     */
    public function testPropertyEnableDocusignIntegration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_google_analytics"
     */
    public function testPropertyEnableGoogleAnalytics()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_international_phone"
     */
    public function testPropertyEnableInternationalPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_idv_fraud_prevention"
     */
    public function testPropertyEnableIdvFraudPrevention()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_kba_fraud_prevention"
     */
    public function testPropertyEnableKbaFraudPrevention()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_transunion_kba"
     */
    public function testPropertyEnableTransunionKba()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_limit_multiple_submissions"
     */
    public function testPropertyEnableLimitMultipleSubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_localize_js"
     */
    public function testPropertyEnableLocalizeJs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_manual_submissions"
     */
    public function testPropertyEnableManualSubmissions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_messaging"
     */
    public function testPropertyEnableMessaging()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_message_drafts"
     */
    public function testPropertyEnableMessageDrafts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_public_gallery"
     */
    public function testPropertyEnableNewPublicGallery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_reminders"
     */
    public function testPropertyEnableReminders()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_responsive_public_forms"
     */
    public function testPropertyEnableResponsivePublicForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_payment_options"
     */
    public function testPropertyEnableNewPaymentOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_stripe_subscription"
     */
    public function testPropertyEnableStripeSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_terms"
     */
    public function testPropertyEnableTerms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_validated_public_voting"
     */
    public function testPropertyEnableValidatedPublicVoting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_video_transcoding"
     */
    public function testPropertyEnableVideoTranscoding()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_data_platform"
     */
    public function testPropertyEnableDataPlatform()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_calendar"
     */
    public function testPropertyEnableCalendar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_salesforce_integration"
     */
    public function testPropertyEnableSalesforceIntegration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_request_forms"
     */
    public function testPropertyEnableRequestForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_ratings"
     */
    public function testPropertyEnableRatings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_multi_file_docs_preview"
     */
    public function testPropertyEnableMultiFileDocsPreview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_price_options"
     */
    public function testPropertyEnablePriceOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_payment_addons"
     */
    public function testPropertyEnablePaymentAddons()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "apply_sub_fees_to_subscription"
     */
    public function testPropertyApplySubFeesToSubscription()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_assignments"
     */
    public function testPropertyEnableNewAssignments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_level_three_view_scores"
     */
    public function testPropertyEnableLevelThreeViewScores()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_discover"
     */
    public function testPropertyEnableDiscover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_submission_details"
     */
    public function testPropertyEnableNewSubmissionDetails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_additional_forms"
     */
    public function testPropertyEnableNewAdditionalForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_submission_actions"
     */
    public function testPropertyEnableNewSubmissionActions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_submitter_notes"
     */
    public function testPropertyEnableSubmitterNotes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_request_edit"
     */
    public function testPropertyAllowRequestEdit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_new_initial_forms"
     */
    public function testPropertyEnableNewInitialForms()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_self_service_submission_limits"
     */
    public function testPropertyEnableSelfServiceSubmissionLimits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "should_track_submissions_monthly"
     */
    public function testPropertyShouldTrackSubmissionsMonthly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_foreign_currency"
     */
    public function testPropertyEnableForeignCurrency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stripe_enabled"
     */
    public function testPropertyStripeEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_document_import"
     */
    public function testPropertyEnableDocumentImport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_ai_assistant"
     */
    public function testPropertyEnableAiAssistant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_us_form_fields"
     */
    public function testPropertyDisableUsFormFields()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_hipaa"
     */
    public function testPropertyIsHipaa()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_budget_tracking"
     */
    public function testPropertyEnableBudgetTracking()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_funds_distribution"
     */
    public function testPropertyEnableFundsDistribution()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_us_bank_payment_blocks"
     */
    public function testPropertyEnableUsBankPaymentBlocks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_financial_oversight"
     */
    public function testPropertyEnableFinancialOversight()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_financial_oversight_premium"
     */
    public function testPropertyEnableFinancialOversightPremium()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_reimbursements"
     */
    public function testPropertyEnableReimbursements()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_auto_labels"
     */
    public function testPropertyEnableAutoLabels()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_reviews"
     */
    public function testPropertyEnableReviews()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_single_round_review"
     */
    public function testPropertyEnableSingleRoundReview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_multi_round_review"
     */
    public function testPropertyEnableMultiRoundReview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_random_assignment"
     */
    public function testPropertyEnableRandomAssignment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_group_assignment"
     */
    public function testPropertyEnableGroupAssignment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_automated_review"
     */
    public function testPropertyEnableAutomatedReview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_feedback_sharing"
     */
    public function testPropertyEnableFeedbackSharing()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_reports_link"
     */
    public function testPropertyEnableReportsLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_advanced_reporting"
     */
    public function testPropertyEnableAdvancedReporting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_aggregate_statistics"
     */
    public function testPropertyEnableAggregateStatistics()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_pdf_export"
     */
    public function testPropertyEnablePdfExport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_visitor_report"
     */
    public function testPropertyEnableVisitorReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_dashboard"
     */
    public function testPropertyEnableDashboard()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_api"
     */
    public function testPropertyEnableApi()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allow_api"
     */
    public function testPropertyAllowApi()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_read_write_api"
     */
    public function testPropertyEnableReadWriteApi()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_zapier_integration"
     */
    public function testPropertyEnableZapierIntegration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_google_sign_in"
     */
    public function testPropertyEnableGoogleSignIn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_facebook_sign_in"
     */
    public function testPropertyEnableFacebookSignIn()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_social_media_buttons"
     */
    public function testPropertyEnableSocialMediaButtons()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_submission_emails"
     */
    public function testPropertyDisableSubmissionEmails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disable_create_account_emails"
     */
    public function testPropertyDisableCreateAccountEmails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_us_bank_check_payment"
     */
    public function testPropertyEnableUsBankCheckPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_us_bank_ach_payment"
     */
    public function testPropertyEnableUsBankAchPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enable_us_bank_prepaid_card_payment"
     */
    public function testPropertyEnableUsBankPrepaidCardPayment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_azure"
     */
    public function testPropertyIsAzure()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
